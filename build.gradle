
/**
 * Gradle 7.0 버전 하위 compile, testCompile, runtime, testRuntime 사용가능
 * Gradle 7.0 버전 이상 implementation, testImplementation, runtimeOnly, testRuntimeOnly로 로 변경하여 사용가능
 */
plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.9'
}

repositories {
    mavenCentral()
}

bootJar.enabled = false

subprojects {
    group = 'com.gojgho'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    // 관리하는 모듈의 공통 dependencies
    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    }

    test {
        useJUnitPlatform()
    }
}

project(':service-api') { // 컴파일 시 service-domain 로딩
    dependencies {
        compileOnly project(':service-domain')
        compileOnly project(':service-common')
    }
}

project(':service-batch') {
    dependencies {
        compileOnly project(':service-domain')
    }
}

// 아래 프로젝트들은 bootJar로 패키징 할 필요 없음, 즉  main() 메서드 불필요
project(':service-domain') {
    dependencies {
        compileOnly project(':service-common')
    }
    bootJar { enabled = false }
    jar { enabled = true }
}

project(':service-common') {
    bootJar { enabled = false }
    jar { enabled = true }
}

project(':service-external') {
    dependencies {
        compileOnly project(':service-domain')
    }
    bootJar { enabled = false }
    jar { enabled = true }
}
